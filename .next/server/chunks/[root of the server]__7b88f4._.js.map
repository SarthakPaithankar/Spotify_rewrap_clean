{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///home/node/app/app/lib/route.js"],"sourcesContent":["import pg from 'pg'\n\nconst dbConfig = {\n    user: process.env.POSTGRES_USER,\n    host: process.env.POSTGRES_HOST,\n    password: process.env.POSTGRES_PASSWORD,\n    database: process.env.POSTGRES_DB,\n    port: process.env.POSTGRES_PORT\n}\nconst db = pg.Pool(dbConfig)\n\nexport async function query(text, params){\n    const client = pool.connect();\n    if(!response.ok){\n        res.status(400).json({error: 'No database Connection'})\n        console.log('database not connected')\n    }else{\n        console.log('database connected!')\n    }\n    try{\n        const result = await client.query(text, params)\n        return result;\n        \n    }finally{\n        client.release()\n    }\n}"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,WAAW;IACb,MAAM,QAAQ,GAAG,CAAC,aAAa;IAC/B,MAAM,QAAQ,GAAG,CAAC,aAAa;IAC/B,UAAU,QAAQ,GAAG,CAAC,iBAAiB;IACvC,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,MAAM,QAAQ,GAAG,CAAC,aAAa;AACnC;AACA,MAAM,KAAK,GAAG,IAAI,CAAC;AAEZ,eAAe,MAAM,IAAI,EAAE,MAAM;IACpC,MAAM,SAAS,KAAK,OAAO;IAC3B,IAAG,CAAC,SAAS,EAAE,EAAC;QACZ,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAC,OAAO;QAAwB;QACrD,QAAQ,GAAG,CAAC;IAChB,OAAK;QACD,QAAQ,GAAG,CAAC;IAChB;IACA,IAAG;QACC,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC,MAAM;QACxC,OAAO;IAEX,SAAQ;QACJ,OAAO,OAAO;IAClB;AACJ"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/node/app/app/api/login/route.js"],"sourcesContent":["import nextConnect from 'next-connect';\nimport query from '../../lib/route';\n\nconst handler = nextConnect()\n\nhandler.get(async (req, res) =>{\n    try{\n        const username = req.username;\n        const password = req.password;\n        const user = query('SELECT user FROM users WHERE username = $1', [username])\n        if(password === user.password){\n            console.log(user)\n        }\n        res.status.json(users);\n    } catch(error){\n        console.error(error);\n        res.status(500).json({ error: 'Failed to fetch users' });\n    }\n})\n\nexport default handler"],"names":[],"mappings":";;;AACA;AADA;;;AAGA,MAAM,UAAU,CAAA,GAAA,0KAAA,CAAA,UAAW,AAAD;AAE1B,QAAQ,GAAG,CAAC,OAAO,KAAK;IACpB,IAAG;QACC,MAAM,WAAW,IAAI,QAAQ;QAC7B,MAAM,WAAW,IAAI,QAAQ;QAC7B,MAAM,OAAO,CAAA,GAAA,qHAAA,CAAA,UAAK,AAAD,EAAE,8CAA8C;YAAC;SAAS;QAC3E,IAAG,aAAa,KAAK,QAAQ,EAAC;YAC1B,QAAQ,GAAG,CAAC;QAChB;QACA,IAAI,MAAM,CAAC,IAAI,CAAC;IACpB,EAAE,OAAM,OAAM;QACV,QAAQ,KAAK,CAAC;QACd,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAwB;IAC1D;AACJ;uCAEe"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}